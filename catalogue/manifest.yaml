apiVersion: v1
kind: ConfigMap
metadata:
  name: catalogue
  namespace: roboshop  # <-- don't forget
  labels: 
    component: catalogue
    project: roboshop
    tier: app
data: 
   MONGO: "true"  # Remove equal symbol(=), and coloun symbol(:)
   MONGO_URL: "mongodb://mongodb:27017/catalogue" 
---
# ðŸ”Ž kubernetes Deployment
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: catalogue
  namespace: roboshop  # edi evvakapote default namespace lo run avutumdhi.
# deployment labels
  labels:
    component: catalogue
    project: roboshop
    tier: app
spec:
  replicas: 1
# These are the labels replica set use to create pod replicas, this should match pod labels
  selector:
    matchLabels: 
      component: catalogue
      project: roboshop
      tier: app
# This is pod definition
  template:
    metadata:
      labels:
        component: catalogue
        project: roboshop
        tier: app
    spec:
      containers: 
      - name: catalogue
        image: kalyantalabothula/catalogue:v1  # Mii Docker hub nimdi pull chesukuntumdhi, username,Password Evvakunda ante? --> Public image kabatti it will pull.  
        envFrom: 
        - configMapRef:  # <-- Environments ni configMap resourceses lo catalogue anedi undi akkada nimdi refer chesuko, akkada unne env catalogue dhi. 
            name: catalogue   
# manam separate gha kuda configMap manifest.yaml file ni pettukovachhu, but manam GitBash lo everytime manam $ kubectl apply -f configmap.yaml ani evvali. ala evvakunda manam ela chesunnam. mottam okka manifest.yaml lo petti apply chestunnam. Like config.yaml ani, Deployment.yaml ani, service.yaml ani, 3 times avvali apply ani. Andhuke manam order lo petti estunnam. 
---
apiVersion: v1
kind: Service
metadata: 
  name: catalogue
  namespace: roboshop   # <--
  labels:
    component: catalogue
    project: roboshop
    tier: app
spec:
  selector:
    component: catalogue
    project: roboshop
    tier: app
  ports:
  - protocol: TCP
    port: 8080 # service port
    targetPort: 8080 # container Port 